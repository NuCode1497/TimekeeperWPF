<UserControl x:Class="TimekeeperWPF.EditTimeTaskView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TimekeeperWPF"
             xmlns:dal="clr-namespace:TimekeeperDAL.EF;assembly=TimekeeperDAL"
             xmlns:wpftools="http://schemas.xceed.com/wpf/xaml/toolkit"
             Width="400" Margin="10">
    <UserControl.Resources>
        <Style x:Key="ReschedChecksStyle" TargetType="CheckBox" 
               BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="Margin" Value="25,1,1,1"/>
            <Setter Property="IsEnabled" Value="False"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=CanReschedule}" Value="True">
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <StackPanel>
        <StackPanel x:Name="NamePanel" Orientation="Horizontal">
            <Label Content="Name" Width="80"/>
            <TextBox Width="250" MaxLength="50" x:Name="NameTextBox"
                     Text="{Binding Path=Name, Mode=TwoWay, ValidatesOnDataErrors=True, 
                ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
        <StackPanel x:Name="DescriptionPanel" Orientation="Horizontal">
            <Label Content="Description" Width="80"/>
            <TextBox Width="250" TextWrapping="Wrap" MaxLength="160" x:Name="DescriptionTextBox"
                     Text="{Binding Path=Description, Mode=TwoWay, ValidatesOnDataErrors=True, 
                ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
        <StackPanel x:Name="StartPanel" Orientation="Horizontal">
            <Label Content="Start" Width="80"/>
            <wpftools:DateTimePicker Width="250" x:Name="StartTextBox"
                                     Value="{Binding Path=Start, Mode=TwoWay, 
                UpdateSourceTrigger=PropertyChanged,
                ValidatesOnDataErrors=True,ValidatesOnExceptions=True}" />
        </StackPanel>
        <StackPanel x:Name="EndPanel" Orientation="Horizontal">
            <Label Content="End" Width="80"/>
            <wpftools:DateTimePicker Width="250" x:Name="EndTextBox"
                                     Value="{Binding Path=End, Mode=TwoWay, 
                UpdateSourceTrigger=PropertyChanged,
                ValidatesOnDataErrors=True,ValidatesOnExceptions=True}" />
        </StackPanel>
        <StackPanel Orientation="Horizontal">
            <StackPanel Width="230">
                <local:TaskTypeSelectorView x:Name="TaskTypePanel"/>
                <StackPanel x:Name="PriorityPanel" Orientation="Horizontal">
                    <Label Content="Priority" Width="80" />
                    <wpftools:IntegerUpDown Width="100" Value="{Binding Path=Priority, 
                        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                        ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"/>
                </StackPanel>
                <StackPanel x:Name="DimensionPanel" Orientation="Horizontal">
                    <Label Content="Dimension" Width="80" />
                    <wpftools:IntegerUpDown Width="100" Value="{Binding Path=Dimension, Mode=TwoWay, 
                        UpdateSourceTrigger=PropertyChanged,
                        ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"/>
                </StackPanel>
                <StackPanel x:Name="ResistancePanel" Orientation="Horizontal">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=CanBePushed}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <Label Content="Resistance" Width="80"/>
                    <wpftools:IntegerUpDown Width="100" Value="{Binding Path=PowerLevel, Mode=TwoWay, 
                        UpdateSourceTrigger=PropertyChanged,
                        ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Content="Allocation"  Width="80"/>
                    <ComboBox Width="100" HorizontalAlignment="Left"
                        SelectedItem="{Binding Path=AllocationMethod, 
                        Mode=TwoWay, FallbackValue=Even}"
                        ItemsSource="{x:Static dal:TimeTask.AllocationMethodChoices}" />
                </StackPanel>
            </StackPanel>
            <StackPanel Margin="5">
                <CheckBox Content="Request Check-in" IsChecked="{Binding Path=AsksForCheckin}"/>
                <CheckBox Content="Can Reschedule" IsChecked="{Binding Path=CanReschedule}"/>
                <CheckBox Content="Automatically" IsChecked="{Binding Path=AsksForReschedule}"
                          Style="{StaticResource ReschedChecksStyle}"/>
                <CheckBox Content="Raise Priority" IsChecked="{Binding Path=RaiseOnReschedule}"
                          Style="{StaticResource ReschedChecksStyle}"/>
                <CheckBox Content="Can Be Early" IsChecked="{Binding Path=CanBeEarly}"/>
                <CheckBox Content="Can Be Late" IsChecked="{Binding Path=CanBeLate}"/>
                <CheckBox Content="Can Be Pushed" IsChecked="{Binding Path=CanBePushed}"/>
                <CheckBox Content="Can Inflate" IsChecked="{Binding Path=CanInflate}"/>
                <CheckBox Content="Can Deflate" IsChecked="{Binding Path=CanDeflate}"/>
                <CheckBox Content="Can Fill" IsChecked="{Binding Path=CanFill}"/>
            </StackPanel>
        </StackPanel>
        <StackPanel DataContext="{Binding Path=DataContext, 
            RelativeSource={RelativeSource AncestorType=Grid}}">
            <!--DataContext is TimeTasksViewModel-->
            <local:AllocationSelectorView/>
            <local:FilterSelectorView/>
            <local:LabelSelectorView/>
        </StackPanel>
    </StackPanel>
</UserControl>
