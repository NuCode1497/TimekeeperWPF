<Application x:Class="TimekeeperWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TimekeeperWPF"
             xmlns:tools="clr-namespace:TimekeeperWPF.Tools"
             xmlns:wpftools="http://schemas.xceed.com/wpf/xaml/toolkit"
             StartupUri="/Views/Main/MainWindow.xaml"
             DispatcherUnhandledException="Application_DispatcherUnhandledException">
    <Application.Resources>
        <!--#region Colors-->
        <SolidColorBrush x:Key="Window.Background" Color="#FF48CD7E"/>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="DataGrid.AlternatingRowBackground" Color="#FFBDFFD8"/>
        <SolidColorBrush x:Key="DataGrid.RowBackground" Color="White"/>
        <SolidColorBrush x:Key="DataGrid.Background" Color="AliceBlue"/>
        <SolidColorBrush x:Key="BasicEntity.Background" Color="Wheat"/>
        <SolidColorBrush x:Key="BasicEntity.BorderBrush" Color="DarkSlateGray"/>
        <SolidColorBrush x:Key="BasicEntity.Foreground" Color="Black"/>
        <SolidColorBrush x:Key="PopUp.Behind.Background" Color="#9980B0A0"/>
        <SolidColorBrush x:Key="PopUp.Window.Background" Color="#FFBDFFD8"/>
        <SolidColorBrush x:Key="PopUp.Window.Border" Color="Gray"/>
        <SolidColorBrush x:Key="GroupBox.BorderBrush" Color="Lime"/>
        <SolidColorBrush x:Key="BasicEntity.Button.Delete.Foreground" Color="Wheat"/>
        <RadialGradientBrush x:Key="BasicEntity.Button.Delete.Static">
            <GradientStop Color="Red" Offset="0.432"/>
            <GradientStop Color="Black" Offset="0.932"/>
            <GradientStop Color="DarkRed" Offset="0.911"/>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="BasicEntity.Button.Delete.Pressed">
            <GradientStop Color="MediumVioletRed" Offset="0.432"/>
            <GradientStop Color="Black" Offset="0.932"/>
            <GradientStop Color="PaleVioletRed" Offset="0.911"/>
        </RadialGradientBrush>
        <SolidColorBrush x:Key="BasicEntity.Button.Add.Foreground" Color="Wheat"/>
        <RadialGradientBrush x:Key="BasicEntity.Button.Add.Static">
            <GradientStop Color="Green" Offset="0.432"/>
            <GradientStop Color="Black" Offset="0.932"/>
            <GradientStop Color="DarkGreen" Offset="0.911"/>
        </RadialGradientBrush>
        <RadialGradientBrush x:Key="BasicEntity.Button.Add.Pressed">
            <GradientStop Color="MediumTurquoise" Offset="0.432"/>
            <GradientStop Color="Black" Offset="0.932"/>
            <GradientStop Color="PaleTurquoise" Offset="0.911"/>
        </RadialGradientBrush>
        <!--#endregion-->
        <!--#region DataContexts-->
        <DataTemplate DataType="{x:Type local:NotesViewModel}">
            <local:NotesView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:FakeNotesViewModel}">
            <local:NotesView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:MonthViewModel}">
            <local:MonthView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:FakeMonthViewModel}">
            <local:MonthView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:LabelsViewModel}">
            <local:BasicEntitiesView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:ResourcesViewModel}">
            <local:BasicEntitiesView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:TaskTypesViewModel}">
            <local:BasicEntitiesView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:TimePointsViewModel}">
            <local:BasicEntitiesView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:TimeTasksViewModel}">
            <local:TimeTasksView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:TimePatternsViewModel}">
            <local:TimePatternsView/>
        </DataTemplate>
        <!--#endregion-->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <!--#region Control Syles and Templates-->
        <Style x:Key="WindowStyle" TargetType="Window">
            <Setter Property="Background" Value="{StaticResource Window.Background}"/>
        </Style>
        <Style x:Key="BasicErrorTemplate" TargetType="Control">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock Foreground="Red" FontSize="20" Text="!" 
                                       ToolTip="{Binding ElementName=controlWithError, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="controlWithError"/>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="Background" Value="Pink"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="EllipsyErrorTemplate" TargetType="Control">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <Ellipse DockPanel.Dock="Right" Width="15" Height="15" Margin="-25,0,0,0" StrokeThickness="1" Fill="Red" 
                                         ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                <Ellipse.Stroke>
                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                        <GradientStop Color="#FFFA0404" Offset="0"/>
                                        <GradientStop Color="#FFC9C7C7" Offset="1"/>
                                    </LinearGradientBrush>
                                </Ellipse.Stroke>
                            </Ellipse>
                            <TextBlock DockPanel.Dock="Right" Foreground="White" FontSize="11pt" Margin="-15,5,0,0" FontWeight="Bold" Text="!"
                                           ToolTip="{Binding ElementName=controlWithError, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="controlWithErrror"/>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BasicErrorTemplate}">
            <Setter Property="MinHeight" Value="26"/>
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}"/>
        <Style TargetType="wpftools:MaskedTextBox" BasedOn="{StaticResource TextBoxStyle}"/>
        <Style TargetType="wpftools:TimeSpanUpDown">
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style TargetType="{x:Type wpftools:DateTimePicker}" BasedOn="{StaticResource BasicErrorTemplate}">
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="4,1"/>
        </Style>
        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource BasicErrorTemplate}"/>
        <Style TargetType="Label">
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style TargetType="GroupBox">
            <Setter Property="BorderBrush" Value="{StaticResource GroupBox.BorderBrush}"/>
            <Setter Property="Margin" Value="12,12,12,6"/>
            <Setter Property="Header" Value="Features"/>
            <Setter Property="Padding" Value="0,0,-2,-2"/>
        </Style>
        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BasicErrorTemplate}">
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="AlternatingRowBackground" Value="{StaticResource DataGrid.AlternatingRowBackground}"/>
            <Setter Property="RowBackground" Value="{StaticResource DataGrid.RowBackground}"/>
            <Setter Property="AlternationCount" Value="1"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="Background" Value="{StaticResource DataGrid.Background}"/>
            <Setter Property="SelectionMode" Value="Single"/>
        </Style>
        <Style TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" Value="{StaticResource ListBox.Disabled.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=Content.Text}"/>
        </Style>
        <Style TargetType="ToolTip">
            <Style.Resources>
                <Style TargetType="ContentPresenter">
                    <Style.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </Style.Resources>
                </Style>
            </Style.Resources>
            <Setter Property="MaxWidth" Value="500" />
        </Style>
        <Style x:Key="EntityDeleteButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Content" Value="r"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="controlLayout">
                            <Ellipse x:Name="buttonSurface" Fill="{StaticResource BasicEntity.Button.Delete.Static}"/>
                            <Label x:Name="buttonCaption" Width="20" Height="20"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource BasicEntity.Button.Delete.Foreground}"
                                   FontFamily="Webdings" FontWeight="Bold" FontSize="8" 
                                   Content="{TemplateBinding Content}" RenderTransformOrigin="0.5,0.5">
                                <Label.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform X="0.5" Y="1"/>
                                    </TransformGroup>
                                </Label.RenderTransform>
                            </Label>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonSurface" Property="Fill" Value="Cyan"/>
                                <Setter TargetName="buttonCaption" Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="controlLayout" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <Setter TargetName="controlLayout" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="buttonSurface" Property="Fill" Value="{StaticResource BasicEntity.Button.Delete.Pressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="EntityAddButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Content" Value="a"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="controlLayout">
                            <Ellipse x:Name="buttonSurface" Fill="{StaticResource BasicEntity.Button.Add.Static}"/>
                            <Label x:Name="buttonCaption" Width="20" Height="20"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource BasicEntity.Button.Add.Foreground}"
                                   FontFamily="Webdings"  FontSize="12" 
                                   Content="{TemplateBinding Content}" RenderTransformOrigin="0.5,0.5">
                                <Label.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform X="-0.5" Y="-0.5"/>
                                    </TransformGroup>
                                </Label.RenderTransform>
                            </Label>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonSurface" Property="Fill" Value="Cyan"/>
                                <Setter TargetName="buttonCaption" Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="controlLayout" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <Setter TargetName="controlLayout" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="buttonSurface" Property="Fill" Value="{StaticResource BasicEntity.Button.Add.Pressed}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="PopUpTemplate" TargetType="ContentControl">
            <!--Grey out background content-->
            <Grid Background="{StaticResource PopUp.Behind.Background}"
                  KeyboardNavigation.TabNavigation="Cycle"
                  Width="{Binding ElementName=SV, Path=ActualWidth}"
                  Height="{Binding ElementName=SV, Path=ActualHeight}" >
                <Border BorderBrush="{StaticResource PopUp.Window.Border}" 
                        Margin="30" CornerRadius="4" BorderThickness="3" 
                        Name="PopUpBorder"
                        MaxWidth="500" MaxHeight="800" 
                        SnapsToDevicePixels="True" UseLayoutRounding="True"
                        HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Border.Effect>
                        <DropShadowEffect/>
                    </Border.Effect>
                    <Grid Background="{StaticResource PopUp.Window.Background}">
                        <ContentPresenter/>
                    </Grid>
                </Border>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="EditPopUpTemplate" TargetType="ContentControl" >
            <ContentControl Template="{StaticResource PopUpTemplate}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="12"/>
                    </Grid.RowDefinitions>
                    <!--Properties Editor-->
                    <GroupBox Header="Properties" Grid.Row="0" Grid.ColumnSpan="2" >
                        <ContentPresenter x:Name="PropEditorCP" />
                    </GroupBox>
                    <!--Validations List-->
                    <ScrollViewer Grid.Row="1" Grid.ColumnSpan="2" Name="ValidationsScroller" Height="100"
                              VerticalScrollBarVisibility="Auto"
                              IsTabStop="False" Margin="12,0,12,6">
                        <ItemsControl Margin="8" Foreground="Red" Name="ValidationsItemsControl" IsTabStop="False"
                                  ItemsSource="{Binding ElementName=DataEditor, Path=(Validation.Errors)}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ItemsControl Name="ValidationsItem" IsTabStop="False" 
                                                  ItemsSource="{Binding Path=ErrorContent}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                    <!--Cancel Save Buttons-->
                    <Button Grid.Column="0" Grid.Row="2" x:Name="CancelButton" Content="Cancel" Width="70"
                        Command="{Binding Path=CancelCommand}"/>
                    <Button Grid.Column="1" Grid.Row="2" x:Name="SaveButton" Content="Save" Width="70"
                        Command="{Binding Path=CommitCommand}"/>
                </Grid>
            </ContentControl>
        </ControlTemplate>
        <ControlTemplate x:Key="EntityTemplate" TargetType="ContentControl">
            <Border Name="LabelBdr" Margin="2" CornerRadius="4" BorderThickness="1" 
                    Background="{StaticResource BasicEntity.Background}" 
                    BorderBrush="{StaticResource BasicEntity.BorderBrush}">
                <Grid Name="LabelLayoutGrid" Height="20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="2"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Grid.Column="2" Name="LabelExtras"/>
                </Grid>
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="TableViewControlsTemplate" TargetType="ContentControl">
            <ToolBarTray>
                <ToolBar Band="1" BandIndex="1">
                    <Button Content="New" x:Name="NewItemBtn" Command="{Binding Path=NewItemCommand}"/>
                    <Button Content="Edit" x:Name="EditSelectedBtn" Command="{Binding Path=EditSelectedCommand}"/>
                    <Button Content="Delete" x:Name="DeleteSelectedBtn" Command="{Binding Path=DeleteSelectedCommand}"/>
                    <Button Margin="2" Content="Refresh" x:Name="GetDataBtn" Command="{Binding Path=GetDataCommand}"/>
                </ToolBar>
            </ToolBarTray>
        </ControlTemplate>
        <!--#endregion-->
    </Application.Resources>
</Application>
