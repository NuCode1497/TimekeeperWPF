<Application x:Class="TimekeeperWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TimekeeperWPF"
             StartupUri="/Views/Main/MainWindow.xaml">
    <Application.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="WindowStyle" TargetType="Window">
            <Setter Property="Background" Value="#FF48CD7E"/>
        </Style>
        <Style x:Key="BasicErrorTemplate" TargetType="Control">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock Foreground="Red" FontSize="20" Text="!" 
                                       ToolTip="{Binding ElementName=controlWithError, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="controlWithError"/>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="Background" Value="Pink"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="EllipsyErrorTemplate" TargetType="Control">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <Ellipse DockPanel.Dock="Right" Width="15" Height="15" Margin="-25,0,0,0" StrokeThickness="1" Fill="Red" 
                                         ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                <Ellipse.Stroke>
                                    <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                        <GradientStop Color="#FFFA0404" Offset="0"/>
                                        <GradientStop Color="#FFC9C7C7" Offset="1"/>
                                    </LinearGradientBrush>
                                </Ellipse.Stroke>
                            </Ellipse>
                            <TextBlock DockPanel.Dock="Right" Foreground="White" FontSize="11pt" Margin="-15,5,0,0" FontWeight="Bold" Text="!"
                                           ToolTip="{Binding ElementName=controlWithError, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="controlWithErrror"/>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource BasicErrorTemplate}">
            <Setter Property="MinHeight" Value="26"/>
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource BasicErrorTemplate}"/>
        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BasicErrorTemplate}">
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
            <Setter Property="AlternatingRowBackground" Value="#FFBDFFD8"/>
            <Setter Property="RowBackground" Value="White"/>
            <Setter Property="AlternationCount" Value="1"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},Path=Content.Text}"/>
        </Style>
        <Style TargetType="ToolTip">
            <Style.Resources>
                <Style TargetType="ContentPresenter">
                    <Style.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap" />
                        </Style>
                    </Style.Resources>
                </Style>
            </Style.Resources>
            <Setter Property="MaxWidth" Value="500" />
        </Style>
        <ControlTemplate x:Key="EditPopUpTemplate" TargetType="ContentControl">
            <!--Grey out background content-->
            <Grid Background="#9980B0A0"
                  Visibility="{Binding Path=IsEditingItemOrAddingNew, Converter={StaticResource BooleanToVisibilityConverter}}"
                  Width="{Binding ElementName=SV, Path=ActualWidth}"
                  Height="{Binding ElementName=SV, Path=ActualHeight}" >
                <Border BorderBrush="Gray" Margin="30" CornerRadius="4" BorderThickness="3" MaxWidth="400" MinWidth="250" MaxHeight="500">
                    <Border.Effect>
                        <DropShadowEffect/>
                    </Border.Effect>
                    <Grid Background="#FFBDFFD8">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="12"/>
                        </Grid.RowDefinitions>
                        <!--Properties Editor-->
                        <ContentPresenter Grid.Row="0" Grid.ColumnSpan="2" Margin="12,12,12,6"/>
                        <!--Validations List-->
                        <ScrollViewer Grid.Row="1" Grid.ColumnSpan="2" Name="ValidationsScroller"
                                      VerticalScrollBarVisibility="Auto"
                                      IsTabStop="False" Margin="12,0,12,6">
                            <ItemsControl Margin="8" Foreground="Red" Name="ValidationsItemsControl"
                                          ItemsSource="{Binding ElementName=DataEditor, Path=(Validation.Errors)}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <ItemsControl Name="ValidationsItem" ItemsSource="{Binding Path=ErrorContent}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                        <!--Cancel Save Buttons-->
                        <Button Grid.Column="0" Grid.Row="2" x:Name="CancelButton" Content="Cancel" Width="70"
                            Command="{Binding Path=CancelCommand}"/>
                        <Button Grid.Column="1" Grid.Row="2" x:Name="SaveButton" Content="Save" Width="70"
                            Command="{Binding Path=CommitCommand}"/>
                    </Grid>
                </Border>
            </Grid>
        </ControlTemplate>
        <Style x:Key="LabelDeleteButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Content" Value="r"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="controlLayout">
                            <Ellipse x:Name="buttonSurface">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Color="Red" Offset="0.432"/>
                                        <GradientStop Color="Black" Offset="0.932"/>
                                        <GradientStop Color="DarkRed" Offset="0.911"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Label x:Name="buttonCaption" Width="20" Height="20"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Wheat"
                                   FontFamily="Webdings" FontWeight="Bold" FontSize="8" 
                                   Content="{TemplateBinding Content}" RenderTransformOrigin="0.5,0.5">
                                <Label.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform X="0.5" Y="1"/>
                                    </TransformGroup>
                                </Label.RenderTransform>
                            </Label>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="buttonSurface" Property="Fill" Value="Cyan"/>
                                <Setter TargetName="buttonCaption" Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="controlLayout" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <Setter TargetName="controlLayout" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="buttonSurface" Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="MediumVioletRed" Offset="0.432"/>
                                            <GradientStop Color="Black" Offset="0.932"/>
                                            <GradientStop Color="PaleVioletRed" Offset="0.911"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
